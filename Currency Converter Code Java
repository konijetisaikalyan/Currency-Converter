import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class CurrencyConverter {
    public static void main(String[] args) {
        converter();
    }

    public static void converter() {
        JFrame f = new JFrame("Currency Converter");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        JLabel l1, l2, l3, l4, l5, l6;
        JTextField t1, t2, t3, t4, t5, t6;
        JButton b1, b2, b3, b4, b5, b6;

        l1 = new JLabel("Rupees:");
        l1.setBounds(20, 40, 60, 30);
        l2 = new JLabel("Dollars:");
        l2.setBounds(170, 40, 60, 30);
        l3 = new JLabel("Euros:");
        l3.setBounds(320, 40, 60, 30);
        l4 = new JLabel("Dirhams:");
        l4.setBounds(20, 80, 60, 30);
        l5 = new JLabel("Pounds:");
        l5.setBounds(170, 80, 60, 30);
        l6 = new JLabel("Takas:");
        l6.setBounds(320, 80, 60, 30);

        t1 = new JTextField("0");
        t1.setBounds(80, 40, 50, 30);
        t2 = new JTextField("0");
        t2.setBounds(240, 40, 50, 30);
        t3 = new JTextField("0");
        t3.setBounds(380, 40, 50, 30);
        t4 = new JTextField("0");
        t4.setBounds(80, 80, 50, 30);
        t5 = new JTextField("0");
        t5.setBounds(240, 80, 50, 30);
        t6 = new JTextField("0");
        t6.setBounds(380, 80, 50, 30);

        b1 = new JButton("INR");
        b1.setBounds(50, 120, 60, 15);
        b2 = new JButton("Dollar");
        b2.setBounds(190, 120, 60, 15);
        b3 = new JButton("Euro");
        b3.setBounds(330, 120, 60, 15);
        b4 = new JButton("Dirham");
        b4.setBounds(50, 160, 60, 15);
        b5 = new JButton("Pound");
        b5.setBounds(190, 160, 60, 15);
        b6 = new JButton("Taka");
        b6.setBounds(330, 160, 60, 15);

        b2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                double dollars = Double.parseDouble(t2.getText());
                double rupees = dollars * 83.25;
                t1.setText(String.valueOf(rupees));

                // Store the conversion in the database
                storeConversion("Dollars", "Rupees", dollars, rupees);
            }
        });

        // Add more action listeners for other conversions as needed.

        f.add(l1);
        f.add(t1);
        f.add(l2);
        f.add(t2);
        f.add(l3);
        f.add(t3);
        f.add(l4);
        f.add(t4);
        f.add(l5);
        f.add(t5);
        f.add(l6);
        f.add(t6);
        f.add(b1);
        f.add(b2);
        f.add(b3);
        f.add(b4);
        f.add(b5);
        f.add(b6);

        f.setLayout(null);
        f.setSize(500, 250);
        f.setVisible(true);
    }

    public static void storeConversion(String sourceCurrency, String targetCurrency, double amount, double convertedAmount) {
        // Database connection parameters
        String url = "jdbc:mysql://localhost:3306/currency_converter";
        String user = "your_username";
        String password = "your_password";

        try {
            // Establish a connection to the database
            Connection connection = DriverManager.getConnection(url, user, password);

            // SQL query to insert conversion data
            String sql = "INSERT INTO conversions (source_currency, target_currency, amount, converted_amount) VALUES (?, ?, ?, ?";

            // Create a PreparedStatement
            PreparedStatement preparedStatement = connection.prepareStatement(sql);

            // Set values for the parameters
            preparedStatement.setString(1, sourceCurrency);
            preparedStatement.setString(2, targetCurrency);
            preparedStatement.setDouble(3, amount);
            preparedStatement.setDouble(4, convertedAmount);

            // Execute the query
            preparedStatement.executeUpdate();

            // Close the connection
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

